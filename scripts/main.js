// Generated by CoffeeScript 1.10.0
(function() {
  var build_list, data_list, generate, hideOutput, showOutput;

  build_list = function(base_list) {
    var active_list, base_key, base_value, subkey, subvalue, temp_list;
    active_list = {};
    for (base_key in base_list) {
      base_value = base_list[base_key];
      if (base_value instanceof Object === true) {
        temp_list = [];
        for (subkey in base_value) {
          subvalue = base_value[subkey];
          temp_list = temp_list.concat(subvalue);
        }
        active_list[base_key] = temp_list;
      } else if (base_value instanceof Array === true) {
        active_list[base_key] = base_value;
      } else {
        console.log("Invalid structure. Needs to be an Array or Object (Dictionary)");
      }
    }
    return active_list;
  };

  showOutput = function() {
    return $('#output').addClass('animate').css('opacity', 1.0);
  };

  hideOutput = function() {
    return $('#output').removeClass('animate').css('opacity', 0.0);
  };

  generate = function(active_list) {
    var generate_string, heading_string, i, j, key_words_list, len, len1, ref, template_list, word;
    heading_string = active_list['heading'][Math.floor(Math.random() * active_list['heading'].length)];
    generate_string = active_list['response'][Math.floor(Math.random() * active_list['response'].length)];
    key_words_list = [];
    template_list = active_list['template'][Math.floor(Math.random() * active_list['template'].length)];
    ref = template_list.split(" ");
    for (i = 0, len = ref.length; i < len; i++) {
      word = ref[i];
      if (word.indexOf('@') >= 0) {
        key_words_list.push(word.split('@').join(''));
      }
    }
    for (j = 0, len1 = key_words_list.length; j < len1; j++) {
      word = key_words_list[j];
      template_list = template_list.replace('@' + word, active_list[word][Math.floor(Math.random() * active_list[word].length)]);
    }
    setTimeout(showOutput, 50);
    $('#output').html('<p>' + heading_string + '</p>' + '<p>' + template_list + '</p>');
    $('#generate').text(generate_string);
    hideOutput();
    return false;
  };

  data_list = build_list(data);

  generate(data_list);

  $('#generate').click(function() {
    return generate(data_list);
  });

}).call(this);
